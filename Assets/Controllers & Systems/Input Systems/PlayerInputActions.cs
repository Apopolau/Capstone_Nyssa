//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Controllers & Systems/Input Systems/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""EarthPlayerDefault"",
            ""id"": ""966d5caa-72aa-4065-bd25-131c7c92cb41"",
            ""actions"": [
                {
                    ""name"": ""EarthWalk"",
                    ""type"": ""Value"",
                    ""id"": ""43db4cfc-7821-4a25-98e3-5b4088b2bae9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PickTree"",
                    ""type"": ""Button"",
                    ""id"": ""495a34ab-3f11-4936-b56e-af29a9bccb07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickGrass"",
                    ""type"": ""Button"",
                    ""id"": ""b9e78fa6-71d3-466d-bd61-ae801e14870c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickFlower"",
                    ""type"": ""Button"",
                    ""id"": ""5d3b6a75-ebc5-4669-b5ff-271a74081743"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Remove Building"",
                    ""type"": ""Button"",
                    ""id"": ""514d0af8-d2f9-4fd1-9f44-2409bf99d06b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""a01b538b-153a-45fc-8c9e-8aae773c39d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Debug Tileflip"",
                    ""type"": ""Button"",
                    ""id"": ""7b88c43f-dd52-49f5-b524-0eb0d63f124c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""c1d112c0-abfe-4969-a55d-b0980585fa63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThornShield"",
                    ""type"": ""Button"",
                    ""id"": ""ec8b9e47-9253-4fc8-a456-9e33586dd469"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""811510da-74ec-48dd-b739-5ba28b806dbf"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickTree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbe9e24c-63fc-46bc-923a-e4b3daa1c9ee"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickTree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9d638ee-8c65-47ee-b44b-6a86993f259a"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickGrass"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9de986a9-5537-44dc-bdd5-ad17691ded38"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickGrass"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db31b04e-9491-4154-a099-82a2f8533792"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickFlower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""819a3489-f125-4f9d-b03a-212eb3fefb7b"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickFlower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fda73281-8b58-4c1e-b653-3a8799fa97fd"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b83cc183-82f3-464e-92e6-91577a02b239"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Remove Building"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""aa1559d0-f32b-4667-9710-717974944141"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.2,max=1)"",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f82b9738-ef29-4a13-98da-c536560ccbae"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aae35a44-e8c2-4f5d-9826-54b674f81a4d"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ea58e246-29ce-4712-b0b1-4d0285e9e343"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bb29ec5e-2264-475a-b254-30867cf1943f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""9640d80c-cdbe-4cfa-af27-699424941762"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c5b6b3b0-e28d-4b09-b687-6a04f4479b4e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5583e7e6-b8f4-4782-8ec5-0a40d651f849"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e26fdfd1-924c-4ed0-9067-6cfd96b4abed"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6a880111-8b2f-49f9-8563-ade3df2d9fb9"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""30582203-2784-484e-a200-e74f58a21e92"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f74824a8-a3ac-43ab-b042-5ae0c2631b16"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fddf9087-6640-4efc-8d88-3cd3b5f639f5"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug Tileflip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df5977d5-d3c0-4305-8c0b-2f121caf853c"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23ef8f42-6352-4f7a-acd1-a5453955faca"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51de7f16-514c-4f1a-b2b4-db25ad4a4833"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThornShield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6160834d-d714-427e-b56f-e9f26bb69204"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThornShield"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlantIsSelected"",
            ""id"": ""bcc7bf38-e7f8-48eb-8d1b-58fd81b0eff0"",
            ""actions"": [
                {
                    ""name"": ""Plantplant"",
                    ""type"": ""Button"",
                    ""id"": ""9491d659-6adc-47b3-9a57-a00f6d07d1bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancelplanting"",
                    ""type"": ""Button"",
                    ""id"": ""fb33cbf5-e211-45bc-af25-fa98fed3c34b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EarthWalk"",
                    ""type"": ""Value"",
                    ""id"": ""f135b41f-ef8f-4405-a125-3b506d4c8835"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cursor Move"",
                    ""type"": ""Value"",
                    ""id"": ""4d61e0a9-39e3-4fef-a2b0-5a829350c262"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""01c1f3cd-ffcc-4b6a-bef0-c6b6d6646149"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Plantplant"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f0a3964-fbde-44be-b691-60e18e3ce6df"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Plantplant"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c777e4d2-f813-469c-9feb-9f11070ae7a8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancelplanting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc566b5a-0681-41bf-b55e-61a009eed32d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancelplanting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81770430-cad4-4575-82bc-9a65fc9e432b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""3af53c5d-8dca-4f97-b606-8e666d18357c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f1829765-2fcb-44ea-9063-3fde24d697ae"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""50581b9e-d34e-4128-bf95-359cb79be04b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5d668e62-d900-4e43-9f73-141ec88f815e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""648299e9-23a3-4e78-bc6d-c5af0ae73ee6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1e5a0abd-321d-48c8-8082-951276b2f4d1"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ebd3025-3762-43e5-a6e5-740d068858bb"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ecec0e8-98d7-40b0-8f57-45cdd928f836"",
                    ""path"": ""<VirtualMouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RemovingPlant"",
            ""id"": ""515d603f-6197-4797-8d4e-d6c8de988aa3"",
            ""actions"": [
                {
                    ""name"": ""RemovePlant"",
                    ""type"": ""Button"",
                    ""id"": ""323e625d-19e5-4c9e-98ed-36a4cc2aa7f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelRemoval"",
                    ""type"": ""Button"",
                    ""id"": ""aa190ad2-5ac3-4caf-bf38-b0f5944ae0a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EarthWalk"",
                    ""type"": ""Value"",
                    ""id"": ""ec60ddc9-66d1-4b80-90cb-9af0760e6016"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cursor Move"",
                    ""type"": ""Value"",
                    ""id"": ""3c59488e-5908-4b5e-a8c8-a667ab453c52"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0e586dd2-0f02-48a0-8b2f-0665fbd48b17"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RemovePlant"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e601471a-757d-41df-8aef-2dd93eebb90d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RemovePlant"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24a65085-af6b-4762-8719-69ca27cb2fe2"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelRemoval"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e064fd4-1100-4b71-8700-96e2ed5e6989"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelRemoval"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5106479b-cc5d-474c-b924-5ace287c8c04"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""65912e0f-fea9-4325-928b-e4aeebfb05e2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c1959e5a-1943-4519-a279-bf8c9b897ae5"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c5acd38e-1f42-4e11-a59a-02c8e272218a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e24d7de4-d29f-460e-82b7-6d728a359e3b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6dde927e-5ced-4975-9eb9-f8caa0ab0bbf"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""083244f1-ea83-40ee-bb7b-60745490c98b"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54c3917d-c28d-4525-ad44-b1a2f6c0b08e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e854b329-e893-40a4-aaba-1ad38d1929fe"",
                    ""path"": ""<VirtualMouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MenuControls"",
            ""id"": ""2dbef1da-ff53-41d8-8c9d-209dd9447025"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""d9ca3c15-17b0-4d48-a4bc-a891dc335de8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""227bca91-2c8e-424f-a843-1070a422d190"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""DialogueControls"",
            ""id"": ""a7805a6e-1c87-408a-83a9-e5fc3ee97bad"",
            ""actions"": [
                {
                    ""name"": ""Continue"",
                    ""type"": ""Button"",
                    ""id"": ""fd660d95-50f0-460c-add5-8dd213cc14fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""157cbc13-5578-4a2f-827d-ba32ac7a17f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""20126de4-7ac4-46d2-9b1f-7d861aae0993"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""974a3c29-3b96-44ee-9c34-e63370084ad1"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b170083-7769-44b2-9c4d-bebdef0b1600"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""898d31ce-77bb-45b5-8c75-c2b404f3fb52"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HealSelect"",
            ""id"": ""6cb62c2c-1b32-4228-821d-31702da8ba00"",
            ""actions"": [
                {
                    ""name"": ""SelectTarget"",
                    ""type"": ""Button"",
                    ""id"": ""82e769aa-100d-4e74-9e24-6b93a2a597c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelHeal"",
                    ""type"": ""Button"",
                    ""id"": ""b95555b2-d759-4c50-a517-d5ad14236420"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleTarget"",
                    ""type"": ""Button"",
                    ""id"": ""d46b3596-a203-498d-821c-8e373f400721"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""58ddaf7e-4c5b-4177-8b4e-2e6a11a1bd6d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c814826-3f8e-4678-8b5c-f1740d39d912"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""695fd92f-23d3-4138-9dab-e119641f2eb5"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d50aaccd-2137-4f12-9e32-18cb23cfc5a5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelHeal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e7c1637-5eb7-4f84-ba75-24cfd1dd8225"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelHeal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc76dd53-2be1-4dc7-91b1-33c584ef6b09"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3582948-2284-4451-a4a4-841c00479107"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00722881-9cf2-44c7-aa45-f985dcfbb30b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01abce95-61e2-4c1d-8df9-f3155d339c0e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BarrierSelect"",
            ""id"": ""646877bb-de65-4980-8ae5-f1c8b19d81ce"",
            ""actions"": [
                {
                    ""name"": ""SelectTarget"",
                    ""type"": ""Button"",
                    ""id"": ""769b02b7-4f67-4c69-bfb7-318b57ba475e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CancelBarrier"",
                    ""type"": ""Button"",
                    ""id"": ""f4238b88-b498-4160-a6a3-3deda772e752"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleTarget"",
                    ""type"": ""Button"",
                    ""id"": ""4b5ab5a9-3e9c-4dfc-bbd5-f7251df0abfa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""34dca151-c750-4cf6-8a4d-33b04e42a61a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""356b03c8-7874-47b4-aa86-a30035f3e1dc"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""760327d1-8642-473b-9801-9c7476588be6"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f690df43-c1ac-4371-bc93-00b04e9f30e2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelBarrier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b78a5178-0170-49ce-aeb0-b6f9034b500e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CancelBarrier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bf8e276-63c2-451a-b563-c6abf95c0b6d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""782b9cfd-e142-4300-86a3-539870dd3526"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73a77943-21fc-4d77-bd20-ce5cfa8cd7b1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""772d7bbc-76a3-4ff7-80d1-ef1c2e91f12a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CutsceneControls"",
            ""id"": ""68984736-6554-46d0-a829-d0118fabcb77"",
            ""actions"": [
                {
                    ""name"": ""NextSlide"",
                    ""type"": ""Button"",
                    ""id"": ""8f670c1c-3b92-45d0-9929-796fc56f41c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e576dad6-698d-418b-a647-7d4209498601"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextSlide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71b79150-6195-4f4e-99fb-30f451581795"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextSlide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HoldingNyssa"",
            ""id"": ""77d5e3d9-54db-47f6-b9a5-f5891cadcf01"",
            ""actions"": [
                {
                    ""name"": ""EarthWalk"",
                    ""type"": ""Value"",
                    ""id"": ""7dc7389f-b6a9-45a8-b2f9-2ce4b278504c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PutNyssaDown"",
                    ""type"": ""Button"",
                    ""id"": ""7921fa13-3bf1-49b0-bbb2-045f0b630d58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Controller"",
                    ""id"": ""9b239d2b-1d9b-4ddb-8c35-1281cd5f9119"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.2,max=1)"",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d5a0496c-7161-4aca-804a-7024e0bfb1d3"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2399c89c-e1ca-44bb-9bcd-b886e36a16c9"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""df38c073-f07f-452b-9b27-ff2b680fb679"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9cd4b6a9-2c5f-436b-98d0-cc01fa71d570"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""03d2ce32-5ee9-4dea-ad17-06cb922bb356"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d565f95b-d5df-4851-99d2-5d9305294f7b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6e36ed41-afaf-4b6a-bda9-cadac21ff4b2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c0acea95-2c28-4956-b313-5036e183f39f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""32a38de6-fc8e-48f4-9a4d-4924146ec51e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EarthWalk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6e151e89-317b-42f9-ba11-9f2d6140379e"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PutNyssaDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c354c73-d32e-485d-aa81-8eb8aadcd5ec"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PutNyssaDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // EarthPlayerDefault
        m_EarthPlayerDefault = asset.FindActionMap("EarthPlayerDefault", throwIfNotFound: true);
        m_EarthPlayerDefault_EarthWalk = m_EarthPlayerDefault.FindAction("EarthWalk", throwIfNotFound: true);
        m_EarthPlayerDefault_PickTree = m_EarthPlayerDefault.FindAction("PickTree", throwIfNotFound: true);
        m_EarthPlayerDefault_PickGrass = m_EarthPlayerDefault.FindAction("PickGrass", throwIfNotFound: true);
        m_EarthPlayerDefault_PickFlower = m_EarthPlayerDefault.FindAction("PickFlower", throwIfNotFound: true);
        m_EarthPlayerDefault_RemoveBuilding = m_EarthPlayerDefault.FindAction("Remove Building", throwIfNotFound: true);
        m_EarthPlayerDefault_Interact = m_EarthPlayerDefault.FindAction("Interact", throwIfNotFound: true);
        m_EarthPlayerDefault_DebugTileflip = m_EarthPlayerDefault.FindAction("Debug Tileflip", throwIfNotFound: true);
        m_EarthPlayerDefault_Heal = m_EarthPlayerDefault.FindAction("Heal", throwIfNotFound: true);
        m_EarthPlayerDefault_ThornShield = m_EarthPlayerDefault.FindAction("ThornShield", throwIfNotFound: true);
        // PlantIsSelected
        m_PlantIsSelected = asset.FindActionMap("PlantIsSelected", throwIfNotFound: true);
        m_PlantIsSelected_Plantplant = m_PlantIsSelected.FindAction("Plantplant", throwIfNotFound: true);
        m_PlantIsSelected_Cancelplanting = m_PlantIsSelected.FindAction("Cancelplanting", throwIfNotFound: true);
        m_PlantIsSelected_EarthWalk = m_PlantIsSelected.FindAction("EarthWalk", throwIfNotFound: true);
        m_PlantIsSelected_CursorMove = m_PlantIsSelected.FindAction("Cursor Move", throwIfNotFound: true);
        // RemovingPlant
        m_RemovingPlant = asset.FindActionMap("RemovingPlant", throwIfNotFound: true);
        m_RemovingPlant_RemovePlant = m_RemovingPlant.FindAction("RemovePlant", throwIfNotFound: true);
        m_RemovingPlant_CancelRemoval = m_RemovingPlant.FindAction("CancelRemoval", throwIfNotFound: true);
        m_RemovingPlant_EarthWalk = m_RemovingPlant.FindAction("EarthWalk", throwIfNotFound: true);
        m_RemovingPlant_CursorMove = m_RemovingPlant.FindAction("Cursor Move", throwIfNotFound: true);
        // MenuControls
        m_MenuControls = asset.FindActionMap("MenuControls", throwIfNotFound: true);
        m_MenuControls_Newaction = m_MenuControls.FindAction("New action", throwIfNotFound: true);
        // DialogueControls
        m_DialogueControls = asset.FindActionMap("DialogueControls", throwIfNotFound: true);
        m_DialogueControls_Continue = m_DialogueControls.FindAction("Continue", throwIfNotFound: true);
        m_DialogueControls_Skip = m_DialogueControls.FindAction("Skip", throwIfNotFound: true);
        // HealSelect
        m_HealSelect = asset.FindActionMap("HealSelect", throwIfNotFound: true);
        m_HealSelect_SelectTarget = m_HealSelect.FindAction("SelectTarget", throwIfNotFound: true);
        m_HealSelect_CancelHeal = m_HealSelect.FindAction("CancelHeal", throwIfNotFound: true);
        m_HealSelect_CycleTarget = m_HealSelect.FindAction("CycleTarget", throwIfNotFound: true);
        // BarrierSelect
        m_BarrierSelect = asset.FindActionMap("BarrierSelect", throwIfNotFound: true);
        m_BarrierSelect_SelectTarget = m_BarrierSelect.FindAction("SelectTarget", throwIfNotFound: true);
        m_BarrierSelect_CancelBarrier = m_BarrierSelect.FindAction("CancelBarrier", throwIfNotFound: true);
        m_BarrierSelect_CycleTarget = m_BarrierSelect.FindAction("CycleTarget", throwIfNotFound: true);
        // CutsceneControls
        m_CutsceneControls = asset.FindActionMap("CutsceneControls", throwIfNotFound: true);
        m_CutsceneControls_NextSlide = m_CutsceneControls.FindAction("NextSlide", throwIfNotFound: true);
        // HoldingNyssa
        m_HoldingNyssa = asset.FindActionMap("HoldingNyssa", throwIfNotFound: true);
        m_HoldingNyssa_EarthWalk = m_HoldingNyssa.FindAction("EarthWalk", throwIfNotFound: true);
        m_HoldingNyssa_PutNyssaDown = m_HoldingNyssa.FindAction("PutNyssaDown", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // EarthPlayerDefault
    private readonly InputActionMap m_EarthPlayerDefault;
    private List<IEarthPlayerDefaultActions> m_EarthPlayerDefaultActionsCallbackInterfaces = new List<IEarthPlayerDefaultActions>();
    private readonly InputAction m_EarthPlayerDefault_EarthWalk;
    private readonly InputAction m_EarthPlayerDefault_PickTree;
    private readonly InputAction m_EarthPlayerDefault_PickGrass;
    private readonly InputAction m_EarthPlayerDefault_PickFlower;
    private readonly InputAction m_EarthPlayerDefault_RemoveBuilding;
    private readonly InputAction m_EarthPlayerDefault_Interact;
    private readonly InputAction m_EarthPlayerDefault_DebugTileflip;
    private readonly InputAction m_EarthPlayerDefault_Heal;
    private readonly InputAction m_EarthPlayerDefault_ThornShield;
    public struct EarthPlayerDefaultActions
    {
        private @PlayerInputActions m_Wrapper;
        public EarthPlayerDefaultActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @EarthWalk => m_Wrapper.m_EarthPlayerDefault_EarthWalk;
        public InputAction @PickTree => m_Wrapper.m_EarthPlayerDefault_PickTree;
        public InputAction @PickGrass => m_Wrapper.m_EarthPlayerDefault_PickGrass;
        public InputAction @PickFlower => m_Wrapper.m_EarthPlayerDefault_PickFlower;
        public InputAction @RemoveBuilding => m_Wrapper.m_EarthPlayerDefault_RemoveBuilding;
        public InputAction @Interact => m_Wrapper.m_EarthPlayerDefault_Interact;
        public InputAction @DebugTileflip => m_Wrapper.m_EarthPlayerDefault_DebugTileflip;
        public InputAction @Heal => m_Wrapper.m_EarthPlayerDefault_Heal;
        public InputAction @ThornShield => m_Wrapper.m_EarthPlayerDefault_ThornShield;
        public InputActionMap Get() { return m_Wrapper.m_EarthPlayerDefault; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EarthPlayerDefaultActions set) { return set.Get(); }
        public void AddCallbacks(IEarthPlayerDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_EarthPlayerDefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_EarthPlayerDefaultActionsCallbackInterfaces.Add(instance);
            @EarthWalk.started += instance.OnEarthWalk;
            @EarthWalk.performed += instance.OnEarthWalk;
            @EarthWalk.canceled += instance.OnEarthWalk;
            @PickTree.started += instance.OnPickTree;
            @PickTree.performed += instance.OnPickTree;
            @PickTree.canceled += instance.OnPickTree;
            @PickGrass.started += instance.OnPickGrass;
            @PickGrass.performed += instance.OnPickGrass;
            @PickGrass.canceled += instance.OnPickGrass;
            @PickFlower.started += instance.OnPickFlower;
            @PickFlower.performed += instance.OnPickFlower;
            @PickFlower.canceled += instance.OnPickFlower;
            @RemoveBuilding.started += instance.OnRemoveBuilding;
            @RemoveBuilding.performed += instance.OnRemoveBuilding;
            @RemoveBuilding.canceled += instance.OnRemoveBuilding;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @DebugTileflip.started += instance.OnDebugTileflip;
            @DebugTileflip.performed += instance.OnDebugTileflip;
            @DebugTileflip.canceled += instance.OnDebugTileflip;
            @Heal.started += instance.OnHeal;
            @Heal.performed += instance.OnHeal;
            @Heal.canceled += instance.OnHeal;
            @ThornShield.started += instance.OnThornShield;
            @ThornShield.performed += instance.OnThornShield;
            @ThornShield.canceled += instance.OnThornShield;
        }

        private void UnregisterCallbacks(IEarthPlayerDefaultActions instance)
        {
            @EarthWalk.started -= instance.OnEarthWalk;
            @EarthWalk.performed -= instance.OnEarthWalk;
            @EarthWalk.canceled -= instance.OnEarthWalk;
            @PickTree.started -= instance.OnPickTree;
            @PickTree.performed -= instance.OnPickTree;
            @PickTree.canceled -= instance.OnPickTree;
            @PickGrass.started -= instance.OnPickGrass;
            @PickGrass.performed -= instance.OnPickGrass;
            @PickGrass.canceled -= instance.OnPickGrass;
            @PickFlower.started -= instance.OnPickFlower;
            @PickFlower.performed -= instance.OnPickFlower;
            @PickFlower.canceled -= instance.OnPickFlower;
            @RemoveBuilding.started -= instance.OnRemoveBuilding;
            @RemoveBuilding.performed -= instance.OnRemoveBuilding;
            @RemoveBuilding.canceled -= instance.OnRemoveBuilding;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @DebugTileflip.started -= instance.OnDebugTileflip;
            @DebugTileflip.performed -= instance.OnDebugTileflip;
            @DebugTileflip.canceled -= instance.OnDebugTileflip;
            @Heal.started -= instance.OnHeal;
            @Heal.performed -= instance.OnHeal;
            @Heal.canceled -= instance.OnHeal;
            @ThornShield.started -= instance.OnThornShield;
            @ThornShield.performed -= instance.OnThornShield;
            @ThornShield.canceled -= instance.OnThornShield;
        }

        public void RemoveCallbacks(IEarthPlayerDefaultActions instance)
        {
            if (m_Wrapper.m_EarthPlayerDefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IEarthPlayerDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_EarthPlayerDefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_EarthPlayerDefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public EarthPlayerDefaultActions @EarthPlayerDefault => new EarthPlayerDefaultActions(this);

    // PlantIsSelected
    private readonly InputActionMap m_PlantIsSelected;
    private List<IPlantIsSelectedActions> m_PlantIsSelectedActionsCallbackInterfaces = new List<IPlantIsSelectedActions>();
    private readonly InputAction m_PlantIsSelected_Plantplant;
    private readonly InputAction m_PlantIsSelected_Cancelplanting;
    private readonly InputAction m_PlantIsSelected_EarthWalk;
    private readonly InputAction m_PlantIsSelected_CursorMove;
    public struct PlantIsSelectedActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlantIsSelectedActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Plantplant => m_Wrapper.m_PlantIsSelected_Plantplant;
        public InputAction @Cancelplanting => m_Wrapper.m_PlantIsSelected_Cancelplanting;
        public InputAction @EarthWalk => m_Wrapper.m_PlantIsSelected_EarthWalk;
        public InputAction @CursorMove => m_Wrapper.m_PlantIsSelected_CursorMove;
        public InputActionMap Get() { return m_Wrapper.m_PlantIsSelected; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlantIsSelectedActions set) { return set.Get(); }
        public void AddCallbacks(IPlantIsSelectedActions instance)
        {
            if (instance == null || m_Wrapper.m_PlantIsSelectedActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlantIsSelectedActionsCallbackInterfaces.Add(instance);
            @Plantplant.started += instance.OnPlantplant;
            @Plantplant.performed += instance.OnPlantplant;
            @Plantplant.canceled += instance.OnPlantplant;
            @Cancelplanting.started += instance.OnCancelplanting;
            @Cancelplanting.performed += instance.OnCancelplanting;
            @Cancelplanting.canceled += instance.OnCancelplanting;
            @EarthWalk.started += instance.OnEarthWalk;
            @EarthWalk.performed += instance.OnEarthWalk;
            @EarthWalk.canceled += instance.OnEarthWalk;
            @CursorMove.started += instance.OnCursorMove;
            @CursorMove.performed += instance.OnCursorMove;
            @CursorMove.canceled += instance.OnCursorMove;
        }

        private void UnregisterCallbacks(IPlantIsSelectedActions instance)
        {
            @Plantplant.started -= instance.OnPlantplant;
            @Plantplant.performed -= instance.OnPlantplant;
            @Plantplant.canceled -= instance.OnPlantplant;
            @Cancelplanting.started -= instance.OnCancelplanting;
            @Cancelplanting.performed -= instance.OnCancelplanting;
            @Cancelplanting.canceled -= instance.OnCancelplanting;
            @EarthWalk.started -= instance.OnEarthWalk;
            @EarthWalk.performed -= instance.OnEarthWalk;
            @EarthWalk.canceled -= instance.OnEarthWalk;
            @CursorMove.started -= instance.OnCursorMove;
            @CursorMove.performed -= instance.OnCursorMove;
            @CursorMove.canceled -= instance.OnCursorMove;
        }

        public void RemoveCallbacks(IPlantIsSelectedActions instance)
        {
            if (m_Wrapper.m_PlantIsSelectedActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlantIsSelectedActions instance)
        {
            foreach (var item in m_Wrapper.m_PlantIsSelectedActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlantIsSelectedActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlantIsSelectedActions @PlantIsSelected => new PlantIsSelectedActions(this);

    // RemovingPlant
    private readonly InputActionMap m_RemovingPlant;
    private List<IRemovingPlantActions> m_RemovingPlantActionsCallbackInterfaces = new List<IRemovingPlantActions>();
    private readonly InputAction m_RemovingPlant_RemovePlant;
    private readonly InputAction m_RemovingPlant_CancelRemoval;
    private readonly InputAction m_RemovingPlant_EarthWalk;
    private readonly InputAction m_RemovingPlant_CursorMove;
    public struct RemovingPlantActions
    {
        private @PlayerInputActions m_Wrapper;
        public RemovingPlantActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @RemovePlant => m_Wrapper.m_RemovingPlant_RemovePlant;
        public InputAction @CancelRemoval => m_Wrapper.m_RemovingPlant_CancelRemoval;
        public InputAction @EarthWalk => m_Wrapper.m_RemovingPlant_EarthWalk;
        public InputAction @CursorMove => m_Wrapper.m_RemovingPlant_CursorMove;
        public InputActionMap Get() { return m_Wrapper.m_RemovingPlant; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RemovingPlantActions set) { return set.Get(); }
        public void AddCallbacks(IRemovingPlantActions instance)
        {
            if (instance == null || m_Wrapper.m_RemovingPlantActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RemovingPlantActionsCallbackInterfaces.Add(instance);
            @RemovePlant.started += instance.OnRemovePlant;
            @RemovePlant.performed += instance.OnRemovePlant;
            @RemovePlant.canceled += instance.OnRemovePlant;
            @CancelRemoval.started += instance.OnCancelRemoval;
            @CancelRemoval.performed += instance.OnCancelRemoval;
            @CancelRemoval.canceled += instance.OnCancelRemoval;
            @EarthWalk.started += instance.OnEarthWalk;
            @EarthWalk.performed += instance.OnEarthWalk;
            @EarthWalk.canceled += instance.OnEarthWalk;
            @CursorMove.started += instance.OnCursorMove;
            @CursorMove.performed += instance.OnCursorMove;
            @CursorMove.canceled += instance.OnCursorMove;
        }

        private void UnregisterCallbacks(IRemovingPlantActions instance)
        {
            @RemovePlant.started -= instance.OnRemovePlant;
            @RemovePlant.performed -= instance.OnRemovePlant;
            @RemovePlant.canceled -= instance.OnRemovePlant;
            @CancelRemoval.started -= instance.OnCancelRemoval;
            @CancelRemoval.performed -= instance.OnCancelRemoval;
            @CancelRemoval.canceled -= instance.OnCancelRemoval;
            @EarthWalk.started -= instance.OnEarthWalk;
            @EarthWalk.performed -= instance.OnEarthWalk;
            @EarthWalk.canceled -= instance.OnEarthWalk;
            @CursorMove.started -= instance.OnCursorMove;
            @CursorMove.performed -= instance.OnCursorMove;
            @CursorMove.canceled -= instance.OnCursorMove;
        }

        public void RemoveCallbacks(IRemovingPlantActions instance)
        {
            if (m_Wrapper.m_RemovingPlantActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRemovingPlantActions instance)
        {
            foreach (var item in m_Wrapper.m_RemovingPlantActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RemovingPlantActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RemovingPlantActions @RemovingPlant => new RemovingPlantActions(this);

    // MenuControls
    private readonly InputActionMap m_MenuControls;
    private List<IMenuControlsActions> m_MenuControlsActionsCallbackInterfaces = new List<IMenuControlsActions>();
    private readonly InputAction m_MenuControls_Newaction;
    public struct MenuControlsActions
    {
        private @PlayerInputActions m_Wrapper;
        public MenuControlsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_MenuControls_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_MenuControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuControlsActions set) { return set.Get(); }
        public void AddCallbacks(IMenuControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuControlsActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(IMenuControlsActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(IMenuControlsActions instance)
        {
            if (m_Wrapper.m_MenuControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuControlsActions @MenuControls => new MenuControlsActions(this);

    // DialogueControls
    private readonly InputActionMap m_DialogueControls;
    private List<IDialogueControlsActions> m_DialogueControlsActionsCallbackInterfaces = new List<IDialogueControlsActions>();
    private readonly InputAction m_DialogueControls_Continue;
    private readonly InputAction m_DialogueControls_Skip;
    public struct DialogueControlsActions
    {
        private @PlayerInputActions m_Wrapper;
        public DialogueControlsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Continue => m_Wrapper.m_DialogueControls_Continue;
        public InputAction @Skip => m_Wrapper.m_DialogueControls_Skip;
        public InputActionMap Get() { return m_Wrapper.m_DialogueControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueControlsActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueControlsActionsCallbackInterfaces.Add(instance);
            @Continue.started += instance.OnContinue;
            @Continue.performed += instance.OnContinue;
            @Continue.canceled += instance.OnContinue;
            @Skip.started += instance.OnSkip;
            @Skip.performed += instance.OnSkip;
            @Skip.canceled += instance.OnSkip;
        }

        private void UnregisterCallbacks(IDialogueControlsActions instance)
        {
            @Continue.started -= instance.OnContinue;
            @Continue.performed -= instance.OnContinue;
            @Continue.canceled -= instance.OnContinue;
            @Skip.started -= instance.OnSkip;
            @Skip.performed -= instance.OnSkip;
            @Skip.canceled -= instance.OnSkip;
        }

        public void RemoveCallbacks(IDialogueControlsActions instance)
        {
            if (m_Wrapper.m_DialogueControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueControlsActions @DialogueControls => new DialogueControlsActions(this);

    // HealSelect
    private readonly InputActionMap m_HealSelect;
    private List<IHealSelectActions> m_HealSelectActionsCallbackInterfaces = new List<IHealSelectActions>();
    private readonly InputAction m_HealSelect_SelectTarget;
    private readonly InputAction m_HealSelect_CancelHeal;
    private readonly InputAction m_HealSelect_CycleTarget;
    public struct HealSelectActions
    {
        private @PlayerInputActions m_Wrapper;
        public HealSelectActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectTarget => m_Wrapper.m_HealSelect_SelectTarget;
        public InputAction @CancelHeal => m_Wrapper.m_HealSelect_CancelHeal;
        public InputAction @CycleTarget => m_Wrapper.m_HealSelect_CycleTarget;
        public InputActionMap Get() { return m_Wrapper.m_HealSelect; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HealSelectActions set) { return set.Get(); }
        public void AddCallbacks(IHealSelectActions instance)
        {
            if (instance == null || m_Wrapper.m_HealSelectActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HealSelectActionsCallbackInterfaces.Add(instance);
            @SelectTarget.started += instance.OnSelectTarget;
            @SelectTarget.performed += instance.OnSelectTarget;
            @SelectTarget.canceled += instance.OnSelectTarget;
            @CancelHeal.started += instance.OnCancelHeal;
            @CancelHeal.performed += instance.OnCancelHeal;
            @CancelHeal.canceled += instance.OnCancelHeal;
            @CycleTarget.started += instance.OnCycleTarget;
            @CycleTarget.performed += instance.OnCycleTarget;
            @CycleTarget.canceled += instance.OnCycleTarget;
        }

        private void UnregisterCallbacks(IHealSelectActions instance)
        {
            @SelectTarget.started -= instance.OnSelectTarget;
            @SelectTarget.performed -= instance.OnSelectTarget;
            @SelectTarget.canceled -= instance.OnSelectTarget;
            @CancelHeal.started -= instance.OnCancelHeal;
            @CancelHeal.performed -= instance.OnCancelHeal;
            @CancelHeal.canceled -= instance.OnCancelHeal;
            @CycleTarget.started -= instance.OnCycleTarget;
            @CycleTarget.performed -= instance.OnCycleTarget;
            @CycleTarget.canceled -= instance.OnCycleTarget;
        }

        public void RemoveCallbacks(IHealSelectActions instance)
        {
            if (m_Wrapper.m_HealSelectActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHealSelectActions instance)
        {
            foreach (var item in m_Wrapper.m_HealSelectActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HealSelectActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HealSelectActions @HealSelect => new HealSelectActions(this);

    // BarrierSelect
    private readonly InputActionMap m_BarrierSelect;
    private List<IBarrierSelectActions> m_BarrierSelectActionsCallbackInterfaces = new List<IBarrierSelectActions>();
    private readonly InputAction m_BarrierSelect_SelectTarget;
    private readonly InputAction m_BarrierSelect_CancelBarrier;
    private readonly InputAction m_BarrierSelect_CycleTarget;
    public struct BarrierSelectActions
    {
        private @PlayerInputActions m_Wrapper;
        public BarrierSelectActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectTarget => m_Wrapper.m_BarrierSelect_SelectTarget;
        public InputAction @CancelBarrier => m_Wrapper.m_BarrierSelect_CancelBarrier;
        public InputAction @CycleTarget => m_Wrapper.m_BarrierSelect_CycleTarget;
        public InputActionMap Get() { return m_Wrapper.m_BarrierSelect; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BarrierSelectActions set) { return set.Get(); }
        public void AddCallbacks(IBarrierSelectActions instance)
        {
            if (instance == null || m_Wrapper.m_BarrierSelectActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BarrierSelectActionsCallbackInterfaces.Add(instance);
            @SelectTarget.started += instance.OnSelectTarget;
            @SelectTarget.performed += instance.OnSelectTarget;
            @SelectTarget.canceled += instance.OnSelectTarget;
            @CancelBarrier.started += instance.OnCancelBarrier;
            @CancelBarrier.performed += instance.OnCancelBarrier;
            @CancelBarrier.canceled += instance.OnCancelBarrier;
            @CycleTarget.started += instance.OnCycleTarget;
            @CycleTarget.performed += instance.OnCycleTarget;
            @CycleTarget.canceled += instance.OnCycleTarget;
        }

        private void UnregisterCallbacks(IBarrierSelectActions instance)
        {
            @SelectTarget.started -= instance.OnSelectTarget;
            @SelectTarget.performed -= instance.OnSelectTarget;
            @SelectTarget.canceled -= instance.OnSelectTarget;
            @CancelBarrier.started -= instance.OnCancelBarrier;
            @CancelBarrier.performed -= instance.OnCancelBarrier;
            @CancelBarrier.canceled -= instance.OnCancelBarrier;
            @CycleTarget.started -= instance.OnCycleTarget;
            @CycleTarget.performed -= instance.OnCycleTarget;
            @CycleTarget.canceled -= instance.OnCycleTarget;
        }

        public void RemoveCallbacks(IBarrierSelectActions instance)
        {
            if (m_Wrapper.m_BarrierSelectActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBarrierSelectActions instance)
        {
            foreach (var item in m_Wrapper.m_BarrierSelectActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BarrierSelectActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BarrierSelectActions @BarrierSelect => new BarrierSelectActions(this);

    // CutsceneControls
    private readonly InputActionMap m_CutsceneControls;
    private List<ICutsceneControlsActions> m_CutsceneControlsActionsCallbackInterfaces = new List<ICutsceneControlsActions>();
    private readonly InputAction m_CutsceneControls_NextSlide;
    public struct CutsceneControlsActions
    {
        private @PlayerInputActions m_Wrapper;
        public CutsceneControlsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextSlide => m_Wrapper.m_CutsceneControls_NextSlide;
        public InputActionMap Get() { return m_Wrapper.m_CutsceneControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CutsceneControlsActions set) { return set.Get(); }
        public void AddCallbacks(ICutsceneControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_CutsceneControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CutsceneControlsActionsCallbackInterfaces.Add(instance);
            @NextSlide.started += instance.OnNextSlide;
            @NextSlide.performed += instance.OnNextSlide;
            @NextSlide.canceled += instance.OnNextSlide;
        }

        private void UnregisterCallbacks(ICutsceneControlsActions instance)
        {
            @NextSlide.started -= instance.OnNextSlide;
            @NextSlide.performed -= instance.OnNextSlide;
            @NextSlide.canceled -= instance.OnNextSlide;
        }

        public void RemoveCallbacks(ICutsceneControlsActions instance)
        {
            if (m_Wrapper.m_CutsceneControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICutsceneControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_CutsceneControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CutsceneControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CutsceneControlsActions @CutsceneControls => new CutsceneControlsActions(this);

    // HoldingNyssa
    private readonly InputActionMap m_HoldingNyssa;
    private List<IHoldingNyssaActions> m_HoldingNyssaActionsCallbackInterfaces = new List<IHoldingNyssaActions>();
    private readonly InputAction m_HoldingNyssa_EarthWalk;
    private readonly InputAction m_HoldingNyssa_PutNyssaDown;
    public struct HoldingNyssaActions
    {
        private @PlayerInputActions m_Wrapper;
        public HoldingNyssaActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @EarthWalk => m_Wrapper.m_HoldingNyssa_EarthWalk;
        public InputAction @PutNyssaDown => m_Wrapper.m_HoldingNyssa_PutNyssaDown;
        public InputActionMap Get() { return m_Wrapper.m_HoldingNyssa; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HoldingNyssaActions set) { return set.Get(); }
        public void AddCallbacks(IHoldingNyssaActions instance)
        {
            if (instance == null || m_Wrapper.m_HoldingNyssaActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HoldingNyssaActionsCallbackInterfaces.Add(instance);
            @EarthWalk.started += instance.OnEarthWalk;
            @EarthWalk.performed += instance.OnEarthWalk;
            @EarthWalk.canceled += instance.OnEarthWalk;
            @PutNyssaDown.started += instance.OnPutNyssaDown;
            @PutNyssaDown.performed += instance.OnPutNyssaDown;
            @PutNyssaDown.canceled += instance.OnPutNyssaDown;
        }

        private void UnregisterCallbacks(IHoldingNyssaActions instance)
        {
            @EarthWalk.started -= instance.OnEarthWalk;
            @EarthWalk.performed -= instance.OnEarthWalk;
            @EarthWalk.canceled -= instance.OnEarthWalk;
            @PutNyssaDown.started -= instance.OnPutNyssaDown;
            @PutNyssaDown.performed -= instance.OnPutNyssaDown;
            @PutNyssaDown.canceled -= instance.OnPutNyssaDown;
        }

        public void RemoveCallbacks(IHoldingNyssaActions instance)
        {
            if (m_Wrapper.m_HoldingNyssaActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHoldingNyssaActions instance)
        {
            foreach (var item in m_Wrapper.m_HoldingNyssaActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HoldingNyssaActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HoldingNyssaActions @HoldingNyssa => new HoldingNyssaActions(this);
    public interface IEarthPlayerDefaultActions
    {
        void OnEarthWalk(InputAction.CallbackContext context);
        void OnPickTree(InputAction.CallbackContext context);
        void OnPickGrass(InputAction.CallbackContext context);
        void OnPickFlower(InputAction.CallbackContext context);
        void OnRemoveBuilding(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnDebugTileflip(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
        void OnThornShield(InputAction.CallbackContext context);
    }
    public interface IPlantIsSelectedActions
    {
        void OnPlantplant(InputAction.CallbackContext context);
        void OnCancelplanting(InputAction.CallbackContext context);
        void OnEarthWalk(InputAction.CallbackContext context);
        void OnCursorMove(InputAction.CallbackContext context);
    }
    public interface IRemovingPlantActions
    {
        void OnRemovePlant(InputAction.CallbackContext context);
        void OnCancelRemoval(InputAction.CallbackContext context);
        void OnEarthWalk(InputAction.CallbackContext context);
        void OnCursorMove(InputAction.CallbackContext context);
    }
    public interface IMenuControlsActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
    public interface IDialogueControlsActions
    {
        void OnContinue(InputAction.CallbackContext context);
        void OnSkip(InputAction.CallbackContext context);
    }
    public interface IHealSelectActions
    {
        void OnSelectTarget(InputAction.CallbackContext context);
        void OnCancelHeal(InputAction.CallbackContext context);
        void OnCycleTarget(InputAction.CallbackContext context);
    }
    public interface IBarrierSelectActions
    {
        void OnSelectTarget(InputAction.CallbackContext context);
        void OnCancelBarrier(InputAction.CallbackContext context);
        void OnCycleTarget(InputAction.CallbackContext context);
    }
    public interface ICutsceneControlsActions
    {
        void OnNextSlide(InputAction.CallbackContext context);
    }
    public interface IHoldingNyssaActions
    {
        void OnEarthWalk(InputAction.CallbackContext context);
        void OnPutNyssaDown(InputAction.CallbackContext context);
    }
}
